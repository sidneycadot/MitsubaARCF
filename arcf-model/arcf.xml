<?xml version='1.0' encoding='utf-8'?>

<scene version="0.5.0">

    <bsdf type="diffuse" id="detector.outside-bsdf">
        <!-- NOTE: if we make this fully black, we don't see the scene anymore from inside the detector.
             TODO: figure out why this is the case. (Possibly a Mitsuba bug.) -->
        <spectrum name="reflectance" value="1e-20"/>
    </bsdf>

    <bsdf type="diffuse" id="monochromator.outside-bsdf">
        <spectrum name="reflectance" value="1e-20"/>
    </bsdf>

    <!-- select models -->

    <default name="sample-model"        value="spectralon" />  <!-- "spectralon", qvd", or "none" -->
    <default name="monochromator-model" value="erik"       />  <!-- "hole", "tube", or "erik"     -->
    <default name="environment-model"   value="none"       />  <!-- "full" or "none"              -->

    <default name="integrator-type"     value="bdpt"       />  <!-- "direct", "path", "volpath_simple", "volpath", "bdpt", "photonmapper -->

    <default name="detector.fov_diameter" value="0.200"/>
    <default name="detector.sample_count" value="16"/>

    <!-- Geometry variables -->

    <default name="detector.distance"    value="0.400"  />
    <default name="detector.motor_angle" value="90.000" />

    <default name="monochromator.irradiance"  value="1,1,0" />
    <default name="monochromator.diameter"    value="0.020" />
    <default name="monochromator.tube_length" value="0.040" />
    <default name="monochromator.distance"    value="0.600" />


    <default name="meris.high_motor_angle"   value="0"   />
    <default name="meris.middle_motor_angle" value="0"   />
    <default name="meris.low_motor_angle"    value="+45" />

    <!-- include stuff -->

    <include filename="colors.xml"/>
    <include filename="axes.xml"/>
    <include filename="environment-$environment-model.xml"/>

    <include filename="integrator-$integrator-type.xml"/>

    <include filename="monochromator-$monochromator-model.xml"/>

    <!--
    <emitter type="spot">
        <spectrum name="intensity" value = "1,1,0" />
        <float name="cutoffAngle" value="0.95484125387218869786251529"/>
        <float name="beamWidth" value="0.95484125387218869786251529"/>
        <transform name="toWorld">
            <!- monochromator transform ->
            <rotate y="1" angle="180"/>
            <translate z="$monochromator.distance"/>
        </transform>
    </emitter>
    -->

    <include filename="sample-$sample-model.xml"/>
    <include filename="detector.xml"/>

    <!-- monochromator beam inhomogeneity mask -->
    <!--
    <shape type="rectangle">

        <bsdf type="mask">

            <texture name="opacity" type="bitmap">
                <string name="filename" value="testmask-negated.png"/>
                <string name="wrapMode" value="zero"/>
                <!- uscale == -1. uoffset=+1 ->
                <float name="uscale" value="+1"/>
                <float name="vscale" value="-1"/>
                <float name="uoffset" value="0"/>
                <float name="voffset" value="+1"/>
            </texture>

            <bsdf type="diffuse">
                <spectrum name="reflectance" value="0"/>
            </bsdf>

        </bsdf>

        <transform name="toWorld">
            <scale value="0.01"/>
            <translate z="0.55"/>
        </transform>
    </shape>
    -->

    <!--
    <sensor type="perspective" id="overview">

        <float name="fov" value="45"/>

        <transform name="toWorld">
            <lookat origin="3,0,1" target="0,0,0" up="0,1,0"/>
        </transform>

        <sampler type="independent">
            <integer name="sampleCount" value="8"/>
        </sampler>

        <film type="hdrfilm">
            <integer name="width"            value="960"     />
            <integer name="height"           value="600"     />
            <string  name="fileFormat"       value="openexr" />
            <string  name="pixelFormat"      value="rgb"     />
            <string  name="componentFormat"  value="float32" />
            <boolean name="attachLog"        value="true"    />
            <boolean name="banner"           value="false"   />
            <boolean name="highQualityEdges" value="false"   />
            <rfilter type="gaussian"/>
        </film>

    </sensor>
    -->

</scene>
