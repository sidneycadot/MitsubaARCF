<?xml version='1.0' encoding='utf-8'?>

<scene version="0.5.0">

    <!-- (+z) side of detector; field limiter surface -->

    <!--
    <shape type="rectangle" id="detector field limiter">

        <bsdf type="arcf_fieldfocus">
            <float name="angle" value="$detector.angular_diameter_of_field"/>
        </bsdf>

        <transform name="toWorld">
            <scale value="0.01"/> <!- 20mm x 20mm ->
            <translate z="+0.002"/>
            <!- detector transform ->
            <rotate y="1" angle="180"/>
            <translate z="$detector.distance"/>
            <rotate y="1" angle="$detector.motor_angle"/>
        </transform>

    </shape>
    -->

    <!-- (+z) side of detector; detector front surface (aperture) -->

    <shape type="rectangle" id="detector front surface (with aperture)">

        <bsdf type="mask">

            <ref id="detector.outside-bsdf"/>

            <!-- NOTE: given a fixed object,
                 the texture is moved in the direction (-uoffset, -voffset);
                 after that, the texture is scaled by (1/uscale, 1/vscale).
                 In other words, everything is in the least convenient order
                 when trying to move a texture in position. -->

            <texture name="opacity" type="arcf_aperture">
                <float name="ubar" value="0.0"/>
                <float name="vbar" value="0.5"/>
                <float name="uoffset" value="-2.50"/>
                <float name="voffset" value="-1.25"/>
                <float name="uscale" value="5.00"/>
                <float name="vscale" value="2.50"/>
                <spectrum name="color0" value = "0"/>
                <spectrum name="color1" value = "1"/>
            </texture>

        </bsdf>

        <transform name="toWorld">
            <scale value="0.01"/> <!-- 20mm x 20mm -->
            <!-- detector transform -->
            <rotate y="1" angle="180"/>
            <translate z="$detector.distance"/>
            <rotate y="1" angle="$detector.motor_angle"/>
        </transform>

    </shape>

    <!-- (-z) side of detector; irradiance meter (inside) and outer box (outside) -->

    <!-- combine the backside and the detector. -->

    <shape type="rectangle">

        <bsdf type="twosided">
            <bsdf type="diffuse">
                <spectrum name="reflectance" value="0"/>
            </bsdf>
            <ref id="detector.outside-bsdf"/>
        </bsdf>

        <sensor type="irradiancemeter" id="detector surface irradiance measurement">

            <film type="mfilm">
                <integer name="width"            value="256"         />
                <integer name="height"           value="256"         />
                <string  name="fileFormat"       value="mathematica" />
                <integer name="digits"           value="25"          />
                <string  name="variable"         value="detector"    />
                <string  name="pixelFormat"      value="luminance"   />
                <boolean name="highQualityEdges" value="false"       />
                <rfilter type="box"/>
            </film>

            <sampler type="independent">
                <integer name="sampleCount" value="256"/>
            </sampler>

        </sensor>

        <transform name="toWorld">
            <scale value="0.01"/> <!-- 20mm x 20mm -->
            <translate z="-0.040 "/>
            <!-- detector transform -->
            <rotate y="1" angle="180"/>
            <translate z="$detector.distance"/>
            <rotate y="1" angle="$detector.motor_angle"/>
        </transform>

    </shape>

    <!-- camera inside the detector housing, looking out through the aperture hole. -->

    <sensor type="perspective" id="inside detector">

        <float name="fov" value="20"/>

        <transform name="toWorld">
            <translate z="-0.038"/>
            <!-- detector transform -->
            <rotate y="1" angle="180"/>
            <translate z="$detector.distance"/>
            <rotate y="1" angle="$detector.motor_angle"/>
        </transform>

        <sampler type="independent">
            <integer name="sampleCount" value="16"/>
        </sampler>

        <film type="hdrfilm">
            <integer name="width"            value="800"     />
            <integer name="height"           value="800"     />
            <string  name="fileFormat"       value="openexr" />
            <string  name="pixelFormat"      value="rgb"     />
            <string  name="componentFormat"  value="float32" />
            <boolean name="attachLog"        value="true"    />
            <boolean name="banner"           value="false"   />
            <boolean name="highQualityEdges" value="false"   />
            <rfilter type="gaussian"/>
        </film>

        <!--
        <film type="mfilm">
            <integer name="width"            value="800"         />
            <integer name="height"           value="800"         />
            <string  name="fileFormat"       value="matlab"      />
            <integer name="digits"           value="25"          />
            <string  name="variable"         value="detector"    />
            <string  name="pixelFormat"      value="luminance"   />
            <boolean name="highQualityEdges" value="false"       />
            <rfilter type="box"/>
        </film>
        -->

    </sensor>

    <!-- camera inside the detector housing ; orthographic, looking out through the aperture hole. -->

    <sensor type="orthographic" id="inside detector (ORTHO)">

        <transform name="toWorld">
            <scale value="0.01"/>
            <translate z="-0.038"/>
            <!-- detector transform -->
            <rotate y="1" angle="180"/>
            <translate z="$detector.distance"/>
            <rotate y="1" angle="$detector.motor_angle"/>
        </transform>

        <sampler type="independent">
            <integer name="sampleCount" value="16"/>
        </sampler>

        <film type="hdrfilm">
            <integer name="width"            value="800"     />
            <integer name="height"           value="800"     />
            <string  name="fileFormat"       value="openexr" />
            <string  name="pixelFormat"      value="rgb"     />
            <string  name="componentFormat"  value="float32" />
            <boolean name="attachLog"        value="true"    />
            <boolean name="banner"           value="false"   />
            <boolean name="highQualityEdges" value="false"   />
            <rfilter type="gaussian"/>
        </film>

    </sensor>

    <!-- (-x) side of detector -->

    <shape type="rectangle">

        <ref id="detector.outside-bsdf"/>

        <transform name="toWorld">
            <rotate y="1" angle="-90"/>
            <scale x="0.01" y="0.01" z="0.021"/>
            <translate x="-0.01" z="-0.019"/>
            <!-- detector transform -->
            <rotate y="1" angle="180"/>
            <translate z="$detector.distance"/>
            <rotate y="1" angle="$detector.motor_angle"/>
        </transform>

    </shape>

    <!-- (+x) side of detector -->

    <shape type="rectangle">

        <ref id="detector.outside-bsdf"/>

        <transform name="toWorld">
            <rotate y="1" angle="+90"/>
            <scale x="0.01" y="0.01" z="0.021"/>
            <translate x="+0.01" z="-0.019"/>
            <!-- detector transform -->
            <rotate y="1" angle="180"/>
            <translate z="$detector.distance"/>
            <rotate y="1" angle="$detector.motor_angle"/>
        </transform>

    </shape>

    <!-- (-y) side of detector -->

    <shape type="rectangle">

        <ref id="detector.outside-bsdf"/>

        <transform name="toWorld">
            <rotate x="1" angle="+90"/>
            <scale x="0.01" y="0.01" z="0.021"/>
            <translate y="-0.01" z="-0.019"/>
            <!-- detector transform -->
            <rotate y="1" angle="180"/>
            <translate z="$detector.distance"/>
            <rotate y="1" angle="$detector.motor_angle"/>
        </transform>

    </shape>

    <!-- (+y) side of detector -->

    <shape type="rectangle">

        <ref id="detector.outside-bsdf"/>

        <transform name="toWorld">
            <rotate x="1" angle="-90"/>
            <scale x="0.01" y="0.01" z="0.021"/>
            <translate y="+0.01" z="-0.019"/>
            <!-- detector transform -->
            <rotate y="1" angle="180"/>
            <translate z="$detector.distance"/>
            <rotate y="1" angle="$detector.motor_angle"/>
        </transform>

    </shape>

</scene>
